@inject ITarefaServices TarefaServices;
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudDialog Style="Width:500px;">
    <TitleContent>
        <MudText Typo="Typo.h6">Detalhes da Tarefa</MudText>
    </TitleContent>
    <DialogContent>
        @if (tarefaSelecionada != null)
        {
            @if (tarefaSelecionada.StatusDaTarefa == "Em andamento")
            {
                <MudAlert Severity="Severity.Success" NoIcon="true" Variant="Variant.Filled" Class="my-2">
                    <MudText Typo="Typo.h6">@tarefaSelecionada.StatusDaTarefa</MudText>
                </MudAlert>
            }

            <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                <MudText Typo="Typo.h6">Ticket:</MudText> @tarefaSelecionada.NumeroAtividade
            </MudAlert>

            <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                <MudText Typo="Typo.h6">Cliente:</MudText> @tarefaSelecionada.Cliente
            </MudAlert>

            <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                <MudText Typo="Typo.h6">Título:</MudText> @tarefaSelecionada.Titulo
            </MudAlert>

            <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                <MudText Typo="Typo.h6">Data de Início:</MudText> @tarefaSelecionada.Inicio
            </MudAlert>

            @if (tarefaSelecionada.Pausa != DateTime.MinValue)
            {
                <MudText Typo="Typo.h6">Pausa:</MudText> @tarefaSelecionada.Pausa.ToString("dd/MM/yyyy HH:mm")
            }
            @if (tarefaSelecionada.Reinicio != DateTime.MinValue)
            {
                        <MudText Typo="Typo.h6">
                            Reinício: @tarefaSelecionada.Reinicio.ToString("dd/MM/yyyy HH:mm")
                        </MudText>
            }
            @if (tarefaSelecionada.Termino != DateTime.MinValue)
            {
                        <MudText Typo="Typo.h6">
                            Data de Término: @tarefaSelecionada.Termino.ToString("dd/MM/yyyy HH:mm")
                         </MudText>
            }
            @if (tarefaSelecionada.HorasUtilizadas != TimeSpan.Zero)
            {
                        <MudText Typo="Typo.h6">
                            Horas Utilizadas: @tarefaSelecionada.HorasUtilizadas.ToString()
                         </MudText>
            }
            @if (tarefaSelecionada.HorasDePausa != TimeSpan.Zero)
            {
                        <MudText Typo="Typo.h6">
                            Horas de Pausa: @tarefaSelecionada.HorasDePausa.ToString()
                         </MudText>
            }

        }
    </DialogContent>
    <DialogActions>
        @if (tarefaSelecionada.StatusDaTarefa == "Em andamento")
        {
                <MudButton Color="Color.Warning" Variant="Variant.Filled" OnClick="Pausar">Parar</MudButton>
        }
        else
        {
                <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Pausar">Reiniciar</MudButton>
        }
        <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="Encerrar">Encerrar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter]
    public TarefaViewModel tarefaSelecionada { get; set; } = default!;

    [Parameter]
    public EventCallback<TarefaViewModel> OnTarefaAtualizada { get; set; }

    private async Task Pausar()
    {
        if (tarefaSelecionada != null)
        {
            try
            {
                if (tarefaSelecionada.NumeroAtividade != null)
                {
                    var tarefaAtualizada = await TarefaServices.PararTarefaAsync(tarefaSelecionada.NumeroAtividade);
                    tarefaSelecionada = tarefaAtualizada;
                    await OnTarefaAtualizada.InvokeAsync(tarefaSelecionada);
                    Snackbar.Add($"Tarefa {tarefaSelecionada.NumeroAtividade} pausada com sucesso!", Severity.Success);
                    FecharModal();
                }
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Erro ao pausar a tarefa: {ex.Message}", Severity.Error);
            }
        }
    }

    private async Task Encerrar()
    {
        if (tarefaSelecionada != null)
        {
            try
            {
                if (tarefaSelecionada.NumeroAtividade != null)
                {
                    var tarefaFinalizada = await TarefaServices.FinalizarTarefaAsync(tarefaSelecionada.NumeroAtividade);
                    tarefaSelecionada = tarefaFinalizada;
                    await OnTarefaAtualizada.InvokeAsync(tarefaSelecionada);
                    Snackbar.Add($"Tarefa {tarefaSelecionada.NumeroAtividade} encerrada com sucesso!", Severity.Success);
                    FecharModal();
                }
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Erro ao encerrar a tarefa: {ex.Message}", Severity.Error);
            }
        }
    }

    private void FecharModal()
    {
        MudDialog.Close();
    }
}
