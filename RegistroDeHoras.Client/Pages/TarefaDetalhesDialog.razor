@inject ITarefaServices TarefaServices
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudDialog Style="Width:500px;">
    <TitleContent>
        <MudText Typo="Typo.h6">Detalhes da Tarefa</MudText>
    </TitleContent>
    <DialogContent>
        @if (tarefaSelecionada != null)
        {
            @if (tarefaSelecionada.StatusDaTarefa == "Em andamento")
            {
                <MudAlert Severity="Severity.Success" NoIcon="true" Variant="Variant.Filled" Class="my-2">
                    <MudText Typo="Typo.h6">@tarefaSelecionada.StatusDaTarefa</MudText>
                </MudAlert>
            }

            <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                <MudText Typo="Typo.h6">Ticket:</MudText> @tarefaSelecionada.NumeroAtividade
            </MudAlert>

            <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                <MudText Typo="Typo.h6">Cliente:</MudText> @tarefaSelecionada.Cliente
            </MudAlert>

            <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                <MudText Typo="Typo.h6">Título:</MudText> @tarefaSelecionada.Titulo
            </MudAlert>

            <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                <MudText Typo="Typo.h6">Data de Início:</MudText> @tarefaSelecionada.Inicio.ToString("dd/MM/yyyy HH:mm")
            </MudAlert>

            @if (tarefaSelecionada.Termino != DateTime.MinValue)
            {
                <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                    <MudText Typo="Typo.h6">Data de Término:</MudText> @tarefaSelecionada.Termino.ToString("dd/MM/yyyy HH:mm")
                </MudAlert>
            }

            @if (tarefaSelecionada.HorasUtilizadas != TimeSpan.Zero)
            {
                <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                    <MudText Typo="Typo.h6">Horas Utilizadas:</MudText> @tarefaSelecionada.HorasUtilizadas.ToString(@"hh\:mm\:ss")
                </MudAlert>
            }

            @if (tarefaSelecionada.HorasDePausa != TimeSpan.Zero)
            {
                <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
                    <MudText Typo="Typo.h6">Horas de Pausa:</MudText> @tarefaSelecionada.HorasDePausa.ToString(@"hh\:mm\:ss")
                </MudAlert>
            }

            @if (tarefaSelecionada.Pausas != null && tarefaSelecionada.Pausas.Count > 0)
            {
                <MudText Typo="Typo.h6" Class="my-2">Pausas:</MudText>
                <MudTable Items="@tarefaSelecionada.Pausas" Hover="true">
                    <HeaderContent>
                        <MudTh>Início</MudTh>
                        <MudTh>Término</MudTh>
                        <MudTh>Duração</MudTh>
                        <MudTh>Observação</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Início">@context.Inicio.ToString("dd/MM/yyyy HH:mm")</MudTd>
                        <MudTd DataLabel="Término">@context.Termino.ToString("dd/MM/yyyy HH:mm")</MudTd>
                        <MudTd DataLabel="Duração">@context.Duracao.ToString(@"hh\:mm\:ss")</MudTd>
                        <MudTd DataLabel="Observação">@context.Observacao</MudTd>
                    </RowTemplate>
                </MudTable>
            }

            @if (tarefaSelecionada.StatusDaTarefa == "Em andamento")
            {
                <MudTextField Label="Observação da Pausa" @bind-Value="observacaoPausa" Variant="Variant.Outlined" />
            }
        }
    </DialogContent>
    <DialogActions>
        @if (tarefaSelecionada.StatusDaTarefa == "Em andamento")
        {
            <MudButton Color="Color.Warning" Variant="Variant.Filled" OnClick="Pausar">Parar</MudButton>
        }
        else
        {
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Pausar">Reiniciar</MudButton>
        }
        <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="Encerrar">Encerrar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter]
    public TarefaViewModel tarefaSelecionada { get; set; } = default!;

    [Parameter]
    public EventCallback<TarefaViewModel> OnTarefaAtualizada { get; set; }

    private string observacaoPausa = string.Empty;

    private async Task Pausar()
    {
        if (tarefaSelecionada != null)
        {
            try
            {
                if (tarefaSelecionada.NumeroAtividade != null)
                {
                    var tarefaAtualizada = await TarefaServices.PararTarefaAsync(tarefaSelecionada.NumeroAtividade, observacaoPausa);
                    tarefaSelecionada = tarefaAtualizada;
                    await OnTarefaAtualizada.InvokeAsync(tarefaSelecionada);
                    Snackbar.Add($"Tarefa {tarefaSelecionada.NumeroAtividade} pausada com sucesso!", Severity.Success);
                    FecharModal();
                }
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Erro ao pausar a tarefa: {ex.Message}", Severity.Error);
            }
        }
    }

    private async Task Encerrar()
    {
        if (tarefaSelecionada != null)
        {
            try
            {
                if (tarefaSelecionada.NumeroAtividade != null)
                {
                    var tarefaFinalizada = await TarefaServices.FinalizarTarefaAsync(tarefaSelecionada.NumeroAtividade);
                    tarefaSelecionada = tarefaFinalizada;
                    await OnTarefaAtualizada.InvokeAsync(tarefaSelecionada);
                    Snackbar.Add($"Tarefa {tarefaSelecionada.NumeroAtividade} encerrada com sucesso!", Severity.Success);
                    FecharModal();
                }
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Erro ao encerrar a tarefa: {ex.Message}", Severity.Error);
            }
        }
    }

    private void FecharModal()
    {
        MudDialog.Close();
    }
}